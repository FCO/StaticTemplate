use Test;
use StaticTemplate::Grammar;
use StaticTemplate::Action;

my @tests = 
  Q[]                                                                                                           , Q[],
  Q[bla]                                                                                                        , Q[bla],
  Q[  bla  ]                                                                                                    , Q[  bla  ],
  Q[{% raw %}{{ test }}{% endraw %}]                                                                            , Q[{{ test }}],
  Q[{% raw %}  {{ test }}  {% endraw %}]                                                                        , Q[  {{ test }}  ],
  Q[{% set var1 %}bla{% endset %}{{ var1 }}]                                                                    , Q[bla],
  Q[{% set var1 %}bla{% endset %}--{{ var1 }}--]                                                                , Q[--bla--],
  Q[{% set var1 %}  bla  {% endset %}--{{ var1 }}--]                                                            , Q[--  bla  --],
  Q[{% set bla = 42 %}{{ bla }}]                                                                                , Q[42],
  Q[{% set bla = 1 + 1 %}{{ bla }}]                                                                             , Q[2],
  Q[{% set bla = "test" %}{{ bla }}]                                                                            , Q[test],
  Q[{% set bla = "  test  " %}{{ bla }}]                                                                        , Q[  test  ], # TODO: test with \n
  Q[{% set bla = 'test' %}{{ bla }}]                                                                            , Q[test],
  Q[{% set bla = '  test  ' %}{{ bla }}]                                                                        , Q[  test  ],
  Q[{% if 1 %}ok{% endif %}]                                                                                    , Q[ok],
  Q[{% if true %}ok{% endif %}]                                                                                 , Q[ok],
  Q[{% if 1 %}  ok  {% endif %}]                                                                                , Q[  ok  ],
  Q[{% if 1 %}ok{% else %}nok{% endif %}]                                                                       , Q[ok],
  Q[--{% if "" %}ok{% endif %}--]                                                                               , Q[----],
  Q[--{% if false %}ok{% endif %}--]                                                                            , Q[----],
  #Q[--{% if 0 %}ok{% endif %}--]                                                                                , Q[----],
  #Q[--{% if false %}ok{% endif %}--]                                                                            , Q[----],
  Q[{% if "" %}ok{% else %}nok{% endif %}]                                                                      , Q[nok],
  Q[{% if "" %}ok{% else %}  nok  {% endif %}]                                                                  , Q[  nok  ],
  Q[{% if 1 %}1{% elsif "" %}2{% elsif "" %}3{% else %}4{% endif %}]                                            , Q[1],
  Q[{% if "" %}1{% elsif 1 %}2{% elsif "" %}3{% else %}4{% endif %}]                                            , Q[2],
  Q[{% if "" %}1{% elsif "" %}2{% elsif 1 %}3{% else %}4{% endif %}]                                            , Q[3],
  Q[{% if "" %}1{% elsif "" %}2{% elsif "" %}3{% else %}4{% endif %}]                                           , Q[4],
  Q[{% if 1 %}1{% elsif 1 %}2{% elsif 1 %}3{% else %}4{% endif %}]                                              , Q[1],
  Q[{% if "" %}1{% elsif 1 %}2{% elsif 1 %}3{% else %}4{% endif %}]                                             , Q[2],
  Q[{% set a = 1 %}{% if a == 1 %}1{% elsif a == 2 %}2{% elsif a == 3 %}3{% else %}4{% endif %}]                , Q[1],
  Q[{% set a = 2 %}{% if a == 1 %}1{% elsif a == 2 %}2{% elsif a == 3 %}3{% else %}4{% endif %}]                , Q[2],
  Q[{% set a = 3 %}{% if a == 1 %}1{% elsif a == 2 %}2{% elsif a == 3 %}3{% else %}4{% endif %}]                , Q[3],
  Q[{% set a = 4 %}{% if a == 1 %}1{% elsif a == 2 %}2{% elsif a == 3 %}3{% else %}4{% endif %}]                , Q[4],
;

%*ENV<ST_TEST_MATCH> = %*ENV<ST_TEST_AST> = %*ENV<ST_TEST_RUN> = 1 if %*ENV<ST_TEST_DEBUG>;

for @tests -> $tmpl, $ret {
  ok StaticTemplate::Grammar.parse($tmpl), $tmpl;
  ok my $match = StaticTemplate::Grammar.parse($tmpl, :actions(StaticTemplate::Action)), "match: $tmpl";
  ok my $ast = $match.made, "ast: $tmpl";
  is my $run = $ast.run, $ret, "run: $ret";
  note "match:\n", $match.gist.indent(2) if %*ENV<ST_TEST_MATCH>;
  note "ast  :\n", $ast.gist.indent(2) if %*ENV<ST_TEST_AST>;
  note "run  :\n", $run.gist.indent(2) if %*ENV<ST_TEST_RUN>;
}

done-testing;
